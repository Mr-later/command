input {
       beats  {
        host => "10.1.50.29"
        port => 5044
     }
}
input {
  kafka {
    bootstrap_servers => ["10.1.50.33:9092,10.1.50.34:9092,10.1.50.35:9092"]
    topics => ["testB"]
    type => "kafka"
#    codec =>json
    max_poll_records => "300"
    consumer_threads => 4
    }
  }

filter{
if [type] == "kafka" {
   json {
        source => "message"
    }
}
if  [fields][doc_type] == "access_log" {
mutate { remove_field => ["tags","beats" ] }

grok {
match => { "message" => "%{IPORHOST:clientip} %{HTTPDUSER:ident} %{HTTPDUSER:auth} \[%{HTTPDATE:timestamp}\] \"(?:%{WORD:method} %{NOTSPACE:request}(?: HTTP/%{NUMBER:httpversion})?|%{DATA:rawrequest})\" %{NUMBER:response} (?:%{NUMBER:bytes}|-)" }
remove_field => [ "message" ]
}
date{
match => ["timestamp","dd/MMM/yyyy:HH:mm:ss Z"]
target => ["datetime"]
remove_field => [ "timestamp" ]
}
}
else if [fields][doc_type] == "nginx_access" {
mutate { remove_field => ["tags","beats" ] }
grok{ match => {"message" =>  "%{MAINNGINXLOG}"}
remove_field => [ "message" ]
    }
date{
match => ["timestamp","dd/MMM/yyyy:HH:mm:ss Z"]
target => ["datetime"]
remove_field => [ "timestamp" ]
}
}
else if [fields][doc_type] == "nginx_error" {
mutate { remove_field => ["tags","beats" ] }
grok{ match => {"message" =>  "%{NGINXERROR}"}
remove_field => [ "message" ]
    }
date{
match => ["datetime","yyyy/MM/dd HH:mm:ss"]
timezone => "Asia/Shanghai"
target => "datetime"
 }
}

else if  [fields][doc_type] == "server_log" {
mutate { remove_field => ["tags","beats" ] }
grok {
match => { "message" => "####\<%{DATA}\> \<%{LOGLEVEL:level}\> \<%{DATA:log_type}\> \<%{HOSTNAME:hostname}\> \<%{DATA:servername}\> \<%{DATA:Thread}\> \<\<%{DATA:user}\>\> \<%{DATA:null1}\> \<%{DATA:null2}\> \<%{NUMBER:logtimestamp}\> \<%{DATA:bea_info}\> \<%{DATA:logmessage}\> "}  }
date {
    match => [ "logtimestamp", "UNIX_MS" ]
    target => "logtimestamp"
  }
}
else if [fields][system_type] == "newlis-app"{
grok {
match => {
"message" => ["%{DATA:logdate}%{SPACE}\[%{DATA:info}\]%{SPACE}%{DATA:thread}%{SPACE}\[%{LOGLEVEL:level}\]%{SPACE}%{DATA:sinosoft}%{SPACE}-%{SPACE}%{GREEDYDATA:loginfo}%{SPACE}MDC:","%{DATA:logdate}%{SPACE}\[%{DATA:info}\]%{SPACE}%{DATA:thread}%{SPACE}\[%{LOGLEVEL:level}\]%{SPACE}%{DATA:sinosoft}%{SPACE}-%{SPACE}%{GREEDYDATA:loginfo}","%{GREEDYDATA:loginfo}"]}
remove_field => [ "message" ]
}
if [loginfo] =~ ".*?\{\"Name\"" {
mutate {
        gsub => ["loginfo",".*?\{","{"]
  }
json {source => "loginfo"
    }
mutate {
    convert =>  {
      "Time" => "float"
    }
  }
}
}
else if [fields][system_type] == "newlis-batch"{
grok {
match => {
"message" => ["%{DATA:logdate}%{SPACE}%{DATA:Timer}%{SPACE}\[%{LOGLEVEL:level}\]%{SPACE}%{DATA:sinosoft}%{SPACE}-%{SPACE}%{GREEDYDATA:loginfo}%{SPACE}MDC:","%{DATA:logdate}%{SPACE}%{DATA:Timer}%{SPACE}\[%{LOGLEVEL:level}\]%{SPACE}%{DATA:sinosoft}%{SPACE}-%{SPACE}%{GREEDYDATA:loginfo}","%{GREEDYDATA:loginfo}"]}
remove_field => [ "message" ]
}
if [loginfo] =~ ".*?\{\"Name\"" {
mutate {
        gsub => ["loginfo",".*?\{","{"]
  }
json {
	source => "loginfo"
    }
mutate {
    convert =>  {
      "Time" => "float"
    }
  }
}
}

else if [fields][doc_type] == "radware_log" {
date {
match => [ "logdate", "MMM dd HH:mm:ss" ]
}
grok {
match => { "message" => "%{DATA:logdate} %{NOTSPACE:app} %{LOGLEVEL:level}%{SPACE}%{WORD:OsName} \<%{WORD:slb}\>: %{GREEDYDATA:radware_message}"      }  }
}
else if [fields][doc_type] == "network_log" {
date {
match => [ "logdate", "MMM dd HH:mm:ss" ]
}
grok {
match => { "message" => "%{DATA:logdate} %{NOTSPACE:Id} %{NOTSPACE:FromWhere}: %{GREEDYDATA:network_message}"        }
  }
}
else if [fields][doc_type] == "elite_ngs" {
grok {
match => { "message" => ["%{DATA:logdate}\[%{LOGLEVEL:level}\] \[%{DATA:interface}\] %{GREEDYDATA:loginfo}","%{GREEDYDATA:loginfo}"] }}
date {
match => [ "logdate", "yyyy-MM-dd HH:mm:ss.SSS" ]
target => "logdate"
}
}
else if [fields][system_type] == "msp_log" {
grok {
match => { "message" => ["%{DATA:logdate}%{SPACE}%{LOGLEVEL:level}%{SPACE}\[%{DATA:server}\]%{SPACE}%{DATA:CS}%{SPACE}-%{SPACE}%{GREEDYDATA:loginfo}","%{GREEDYDATA:loginfo}"]}
remove_field => [ "message" ]
 }
date {
match => [ "logdate", "yyyy-MM-dd HH:mm:ss:SSS" ]
target => "logdate"
}
}
}
output {
if [fields][doc_type] == "weblogic_out" {
        elasticsearch {
                       hosts => ["10.1.50.36:9200","10.1.50.37:9200","10.1.50.38:9200","10.1.50.39:9200"]
                       index => "%{[fields][doc_type]}-%{[fields][system_type]}-%{[fields][ipaddr]}-%{+YYYY.MM.dd}"
                       user => "logstash"
                       password => "logstash"
                                 }
   }
else if [fields][system_type] == "msp_log" {
        elasticsearch {
                       hosts => ["10.1.50.36:9200","10.1.50.37:9200","10.1.50.38:9200","10.1.50.39:9200"]
                       index => "%{[fields][doc_type]}-%{[fields][ipaddr]}-%{+YYYY.MM.dd}"
                       user => "logstash"
                       password => "logstash"
                                 }
   }
else if [fields][doc_type] == "interface_log" {
        elasticsearch {
                       hosts => ["10.1.50.36:9200","10.1.50.37:9200","10.1.50.38:9200","10.1.50.39:9200"]
                       index => "%{[fields][doc_type]}-%{[fields][system_type]}-%{+YYYY.MM.dd}"
                       user => "logstash"
                       password => "logstash"
                                 }
   }
else if [fields][doc_type] == "jar_out" {
        elasticsearch {
                       hosts => ["10.1.50.36:9200","10.1.50.37:9200","10.1.50.38:9200","10.1.50.39:9200"]
                       index => "%{[fields][doc_type]}-%{[fields][system_type]}-%{+YYYY.MM.dd}"
                       user => "logstash"
                       password => "logstash"
                                 }
   }
else if [fields][system_type] == "ybt_blue" {
        elasticsearch {
                       hosts => ["10.1.50.36:9200","10.1.50.37:9200","10.1.50.38:9200","10.1.50.39:9200"]
                       index => "%{[fields][doc_type]}-%{[fields][system_type]}-%{+YYYY.MM.dd}"
                       user => "logstash"
                       password => "logstash"
                                 }
   }
else {
       elasticsearch {
                       hosts => ["10.1.50.36:9200","10.1.50.37:9200","10.1.50.38:9200","10.1.50.39:9200"]
                       index => "%{[fields][doc_type]}-%{[fields][system_type]}-%{+YYYY.MM}"
                       user => "logstash"
                       password => "logstash"
                                 }
     }
}




#????????logstash??