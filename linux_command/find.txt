一。Linux--find命令
二。find和 xargs命令组合
三。find和exec 或者ok 结合

注：在使用 find命令的-exec选项处理匹配到的文件时， find命令将所有匹配到的文件一起传递给exec执行。但有些系统对能够传递给exec的命令长度有限制，这样在find命令运行几分钟之后，就会出现溢出错误。此时应使用find与xargs命令结合实现

一。find 查找文件的命令，并可以做出相应的处理
命令格式：
find filename 【选项】【-print -exec -ok ...】
选项参数：
1、-name :按照文件名称查找，可以提前cd定位，也可以在find命令最前面加上待查找路径
注意需要写上文件类型
2、-type：按类型查找文件
d: 目录文件 　　 b:块设备文件　　c:字符设备文件　　f:普通文件
3、-mtime -n +m：　　按照文件的更改时间来查找文件， - n表示文件更改时间距现在n天以内，+ n表示文件更改时间距现在n天以前


命令实操：
1.find 【路径】（可省）  -name   "*.ini"（或者可以指定任意准确的文件名称）
2、find 【路径】（可省） 　-type　f/d　-name  "*.ini"



二。find 与 xargs 的组合：
什么是xargs：x 是加减乘除的乘号，args 则是 arguments (参数) 的意思，所以说，就是在产生某个指令的参数的意思；
会使用 xargs 的原因是， 很多指令其实并不支持管线命令，因此我们可以透过 xargs 来提供该指令引用 standard input 之用。

实例：
1、搜索具体文件：在当前目录下，所有普通文件中搜索“hh”这个词
find ./  -type f | xargs grep "hh"

2、与删除连用：①在当前目录下，删除1天以内的所有东西
find ./ -mtime -1 | xargs rm -rf
②在当前目录下，删除文件大小为0的文件
find ./ -size 0 | xargs rm -rf


三。和exec或者ok结合
find借助-exec选项与{} \;结合使用（注意{}和\;之间有一个空格！）

1.找出当前目录下所有root的文件，并把所有权更改为用户tim
    find . -type f -user root -exec chown tim {} \;
上例中，{} 用于与-exec选项结合使用来匹配所有文件，然后会被替换为相应的文件名。

2.找出自己家目录下所有的.txt文件并删除
      find $HOME/. -name "*.txt" -ok rm {} \;
-ok和-exec行为一样，不过它会给出二次确认提示，是否执行相应的操作。


3.查找当前目录下所有.txt文件并把他们拼接起来写入到all.txt文件中
     find . -type f -name "*.txt" -exec cat {} \;> all.txt

4.将30天前的.log文件移动到old目录中
     find . -type f -mtime +30 -name "*.log" -exec cp {} old \;

5.查找当前目录下所有今天（24小时内）修改过的文件.sh文件，并通过二次确认的方式删除
     find . -type f -mtime -1  -name "*.sh" -ok rm {} \;

6.找出当前目录下所有.txt文件并以“File:文件名”的形式打印出来
     find . -type f -name "*.txt" -exec printf "File: %s\n" {} \;

7.调用.sh文件。因为单行命令中-exec参数中无法使用多个命令，以下方法可以实现在-exec之后接受多条命令
    -exec ./test.sh {} \;


