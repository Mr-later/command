如何向一个文件中写入多行？
-bash-4.2$  ssh icsapp@10.10.68.219 "cat << EOF  >>test.txt
> 123456
>3678654
> EOF"

在平时的运维工作中,我们经常会碰到这样一个场景:
执行脚本的时候,需要往一个文件里自动输入N行内容.如果是少数的几行内容,还可以用echo追加方式,但如果是很多行,那么单纯用echo追加的方式就显得愚蠢之极了！
这个时候,就可以使用EOF结合cat命令进行行内容的追加了.
下面就对EOF的用法进行梳理:
EOF是END Of File的缩写,表示自定义终止符.既然自定义,那么EOF就不是固定的,可以随意设置别名,在linux按ctrl-d就代表EOF.
EOF一般会配合cat能够多行文本输出.
其用法如下:
<<EOF        //开始
....
EOF            //结束

还可以自定义,比如自定义:
<<BBB        //开始
....
BBB              //结束


以下为使用场景.

一.在命令行使用EOF

1）向文件test.sh里输入内容.
[root@slave-server opt]# cat << EOF >test.sh
> 123123123
> 3452354345
> asdfasdfs
> EOF
[root@slave-server opt]# cat test.sh
123123123
3452354345
asdfasdfs

追加内容
[root@slave-server opt]# cat << EOF >>test.sh
> 7777
> 8888
> EOF
[root@slave-server opt]# cat test.sh
123123123
3452354345
asdfasdfs
7777
8888

覆盖
[root@slave-server opt]# cat << EOF >test.sh
> 55555
> EOF
[root@slave-server opt]# cat test.sh
55555

2）自定义EOF,比如自定义为wang
[root@slave-server opt]# cat << wang > haha.txt
> ggggggg
> 4444444
> 6666666
> wang
[root@slave-server opt]# cat haha.txt
ggggggg
4444444
6666666

二.写在脚本中,直接写后面内容即可,不用一行一行的输入了.
cat <<EOF >filebeat.yml
filebeat.prospectors:
- input_type: log
EOF


三.cat <<EOF 与 cat <<-EOF 的区别
 两个都是获取stdin,并在EOF处结束stdin,输出stdout.
 但是<<-是什么意思呢？
 先来看man中的说明:
 If the redirection operator is <<-, then all leading tab characters are stripped from input lines and  the  line  containing  delimiter.
 翻译过来的意思就是:
 如果重定向的操作符是<<-,那么分界符（EOF）所在行的开头部分的制表符（Tab）都将被去除.
 这可以解决由于脚本中的自然缩进产生的制表符.
 通俗一点的解释:
 在我们使用cat <<EOF时,我们输入完成后,需要在一个新的一行输入EOF结束stdin的输入.EOF必须顶行写,前面不能用制表符或者空格.
 比如,下面的语句就不会出错:
 cat <<EOF
 Hello,world!
 EOF
 如果结束分解符EOF前有制表符或者空格,则EOF不会被当做结束分界符,只会继续被当做stdin来输入.
 而<<-就是为了解决这一问题:
 cat <<-EOF
 Hello,world!
       EOF
 上面的写法,虽然最后的EOF前面有多个制表符和空格,但仍然会被当做结束分界符,表示stdin的结束.
 这就是<<和<<-的区别.

 说直白点儿:
 没有有-的话,EOF作为结束符,前面不能有任何tab制表符.
 有-的话,EOF作为结束符,前面可以有tab制表符